---

- name: List hosts in ESXi
  ansible.builtin.debug:
    msg: "Host: {{ item }}"
  loop: "{{ groups['esxi'] }}"

- name: Set esxi name
  ansible.builtin.set_fact:
    host_fact_hostname: "{{ hostvars[groups['esxi'][my_idx]].inventory_hostname }}"

- name: ESXi Exists
  block:
    - name: ESXi hardware
      ansible.builtin.debug:
        msg: "Memory: {{ esximemory }}MB - CPU: {{ esxicpu }}"

    - name: "DELETE virtual machine version"
      community.vmware.vmware_guest:
        datacenter: "{{ vc_datacenter }}"
        folder: "{{ vc_datacenter }}/vm/{{ vc_folder }}"
        name: "{{ host_fact_hostname }}"
        state: absent
        force: true
      when: testingesxi | bool

    - name: "Does ESXi virtual machine exist"
      community.vmware.vmware_guest:
        datacenter: "{{ vc_datacenter }}"
        folder: "{{ vc_datacenter }}/vm/{{ vc_folder }}"
        name: "{{ host_fact_hostname }}"
        state: present

    - name: "Does ESXi virtual machine exist get ip"
      community.vmware.vmware_guest_info:
        datacenter: "{{ vc_datacenter }}"
        name: "{{ host_fact_hostname }}"
        schema: vsphere
        properties:
          - guest.ipAddress
      register: nested_vm

    - name: Add host to group esxi
      ansible.builtin.add_host:
        name: '{{ host_fact_hostname }}'
        groups: esxi
        NESTEDVMIP: "{{ nested_vm.instance.guest.ipAddress }}"

  rescue:
    - name: Clone ESXi
      community.vmware.vmware_guest:
        template: "{{ esxiova }}-{{ vc_cluster | split('/') | last }}"
        state: poweredoff
        cluster: "{{ vc_cluster | split('/') | last }}"
        datacenter: "{{ vc_datacenter }}"
        name: '{{ host_fact_hostname }}'
        folder: "{{ vc_folder }}"
        datastore: "{{ vc_datastore }}"
        vapp_properties:
        - id: guestinfo.password
          value: "{{ vc_fact_password }}" # SSO Password for administrator@vsphere.local
        hardware:
          memory_mb: "{{ esximemory }}"
          num_cpu_cores_per_socket: "{{ esxicpu }}"
          num_cpus: "{{ esxicpu }}"
          nested_virt: true
          version: 21
          cpu_shares_level: high
          mem_shares_level: high

# vmware_guest fails to enable nics correctly
# so change the networks via vmware_guest_network

- name: add and enable guest networks
  community.vmware.vmware_guest_network:
    datacenter: "{{ vc_datacenter }}"
    name: "{{ host_fact_hostname }}"
    state: present
    network_name: "{{ item.network_name | default(omit) }}"
    connected: "{{ item.connected | default(omit) }}"
    label:  "{{ item.label | default(omit) }}"
    device_type: vmxnet3
  loop:
    - network_name: "{{ vc_fact_deployment_network }}"
      connected: true
      label: "Network adapter 1"
    - network_name: "{{ vc_fact_deployment_network }}"
      connected: true
      label: "Network adapter 2"


- name: "poweron virtual machine {{ host_fact_hostname }} version {{ version }}"
  community.vmware.vmware_guest:
    datacenter: "{{ vc_datacenter }}"
    folder: "{{ vc_datacenter }}/vm/{{ vc_folder }}"
    name: "{{ host_fact_hostname }}"
    state: poweredon
    wait_for_ip_address: true
  register: presults

- name: Retrieve guest info
  community.vmware.vmware_guest_info:
    name: "{{ host_fact_hostname }}"
    datacenter: "{{ vc_datacenter }}"
  register: guest_info
  until: guest_info.instance.guest_tools_status == "guestToolsRunning"
  retries: 120
  delay: 5

- name: Show guest info
  ansible.builtin.debug:
    msg: "{{ guest_info }}"

- name: "Does ESXi virtual machine {{ host_fact_hostname }} exist get ip"
  community.vmware.vmware_guest_info:
    datacenter: "{{ vc_datacenter }}"
    name: "{{ host_fact_hostname }}"
    schema: vsphere
    properties:
      - guest.ipAddress
  register: nested_vm

- name: Add host to group esxi
  ansible.builtin.add_host:
    name: '{{ host_fact_hostname }}'
    groups: esxi
    NESTEDVMIP: "{{ nested_vm.instance.guest.ipAddress }}"

- name: "*** Wait for {{ hostvars[groups['esxi'][my_idx]].inventory_hostname }} {{ hostvars[groups['esxi'][my_idx]].NESTEDVMIP }} install of ESXi on host to be complete"
  ansible.builtin.wait_for:
    host: "{{ hostvars[groups['esxi'][my_idx]].NESTEDVMIP }}"
    port: 443
    sleep: 10
    timeout: 900
